author: Robin Hanson

text: 
I have specialized somewhat in being a generalist intellectual. I know of two key strategies for pursuing this. The first one is pretty obvious, but still important: learn the basics of many different fields. The more fields you know, the more chances you will find to apply an insight in one field into another. So not only learn many fields, but keep looking for connections between them. That is, keep searching for ways to apply the insights in all the fields you know to all the other fields you know.
The second strategy is a bit less obvious. And that is to work hard to collect indirect tests and checks of everything you know. This doesn’t tend to happen naturally, because we mostly tend to learn only very direct tests of what we know.
Consider someone writing an oped. With experience, an oped writer will learn in great detail the emotion tones hit by each thing they might say. So they will learn to say things in ways that hit the right tones the right way at the right times. These are relatively direct tests, but not of the literal truth of each thing said. Instead these are tests of how people will react to things said.
Now consider someone writing code that is close to a user interface. In this sort of context, usually the only ways that the code can be wrong is to fail to give the proper appearances to users. If the system looks right to users, then for the most part it just is right, as there are few concepts of hidden mistakes or errors at this level.
In contrast, consider someone trying to create a computer simulation of a particular scientific model. This simulation could in fact be wrong, even though users don’t see any obvious mistakes. When you learn to write code like this, you have to learn to collect more ways to check your code, to look for errors. At least you do if you expect errors to eventually be discovered, but that it works out much better for you if you find such errors early, yourself, rather than that they be found by others, later.
Similarly, if you want to have your best shot at being a productive generalists, you should be collecting as many ways as possible to check each hypothesis or claim you might come across against all of the other things you know. If this sort of thing were true, then we should expect to see that sort of pattern.
You see, when you try to apply insights from some fields to other distantly related fields, most of the ideas you will come up with won’t be that easy to test or check directly. So if you are to have much of a chance of finding good applications, you’ll need to collect a big toolkit of ways to devise sanity checks that you can apply.
In contrast, most fields don’t really offer very strong incentives to collect indirect tests. Many fields clearly telegraph the conclusions you are supposed to reach, making it easy to check if your conclusions are among the desire ones. In many other fields, such as in writing fiction or sermons, one can test the quality of work relatively directly against how it seems to effect readers. They don’t care much there about any truth beyond created the desired effects in readers.
But when you think about each new field you explore, it will be healthy if you fear the possibility that you will draw a tentative conclusion that will later turn out to look pretty wrong. This will push you to search for many different ways to check each hypothesis, to avoid such scenarios. You may well need to imagine that you will face different critical audiences than the people in those fields, as they may well not really care so much about such global consistency. But you need to, if you would learn to be a productive generalist.


title: The InDirect-Check Sweet Spot

date: February 5, 2021 5:15 pm

